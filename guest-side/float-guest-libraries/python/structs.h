/* Hand written data structures */

/* Data structure which is held in .nvFatbinSegment section
 *
 * Somehow describes the fatbin code. */
struct nvFatbinSegmentStruct{
    int m;      // ?? Set to 0x466243b1 for vectorAdd
    int v;      // ?? Set to 1 for vectorAdd
    const unsigned long long* d;    // Pointer to fatbin code in .rodata section
    char *f;    // ?? Set to 0 for vectorAdd
};

struct cudaRegisterFatBinaryStruct{
    struct callHeader callhead;
    struct nvFatbinSegmentStruct fatbinDescr;

    size_t fatBinSz;

    void** hostDblPtr;

    pid_t guest_pid;
};

struct cudaUnRegisterFatBinaryStruct{
    struct callHeader callhead;
    void **hostDblPtr;

    pid_t guest_pid;

};

struct cudaRegisterFunctionStruct{

    struct callHeader callhead;

    void **fatCubinHandle;
    char *hostFun;
    char deviceFun[1024];
    char deviceName[1024];
    int thread_limit;
    uint3 *tid;
    uint3 *bid; 
    dim3 *bDim;
    dim3 *gDim;
    int *wSize;

    pid_t guest_pid;
};
/* Autogenerated data structures */

/* Data structures from header faCuda_api.cpp (included from )*/
/* Data structures from header faCuda_api.cpp (included from )*/
/* Data structures from header faCuda_api.cpp (included from )*/
/* Data structures from header fakeDriverApi.c (included from /faCuda_api.cpp)*/
struct cuInitStruct{
    struct callHeader callheader;

    unsigned int Flags;
};

struct cuDriverGetVersionStruct{
    struct callHeader callheader;

    int driverVersion;
};

struct cuDeviceGetStruct{
    struct callHeader callheader;

    CUdevice device;
    int ordinal;
};

struct cuDeviceGetCountStruct{
    struct callHeader callheader;

    int count;
};

struct cuDeviceGetNameStruct{
    struct callHeader callheader;

    char name[CFWD_BUFSZ];
    int len;
    CUdevice dev;
};

struct cuDeviceComputeCapabilityStruct{
    struct callHeader callheader;

    int major;
    int minor;
    CUdevice dev;
};

struct cuDeviceTotalMemStruct{
    struct callHeader callheader;

    size_t bytes;
    CUdevice dev;
};

struct cuDeviceGetPropertiesStruct{
    struct callHeader callheader;

    CUdevprop prop;
    CUdevice dev;
};

struct cuDeviceGetAttributeStruct{
    struct callHeader callheader;

    int pi;
    CUdevice_attribute attrib;
    CUdevice dev;
};

struct cuCtxCreateStruct{
    struct callHeader callheader;

    CUcontext pctx;
    unsigned int flags;
    CUdevice dev;
};

struct cuCtxDestroyStruct{
    struct callHeader callheader;

    CUcontext ctx;
};

struct cuCtxAttachStruct{
    struct callHeader callheader;

    CUcontext pctx;
    unsigned int flags;
};

struct cuCtxDetachStruct{
    struct callHeader callheader;

    CUcontext ctx;
};

struct cuCtxPushCurrentStruct{
    struct callHeader callheader;

    CUcontext ctx;
};

struct cuCtxPopCurrentStruct{
    struct callHeader callheader;

    CUcontext pctx;
};

struct cuCtxSetCurrentStruct{
    struct callHeader callheader;

    CUcontext ctx;
};

struct cuCtxGetCurrentStruct{
    struct callHeader callheader;

    CUcontext pctx;
};

struct cuCtxGetDeviceStruct{
    struct callHeader callheader;

    CUdevice device;
};

struct cuCtxSynchronizeStruct{
    struct callHeader callheader;

};

struct cuCtxSetLimitStruct{
    struct callHeader callheader;

    CUlimit limit;
    size_t value;
};

struct cuCtxGetLimitStruct{
    struct callHeader callheader;

    size_t pvalue;
    CUlimit limit;
};

struct cuCtxGetCacheConfigStruct{
    struct callHeader callheader;

    CUfunc_cache pconfig;
};

struct cuCtxSetCacheConfigStruct{
    struct callHeader callheader;

    CUfunc_cache config;
};

struct cuCtxGetApiVersionStruct{
    struct callHeader callheader;

    CUcontext ctx;
    unsigned int version;
};

struct cuModuleLoadStruct{
    struct callHeader callheader;

    CUmodule module;
    char fname[CFWD_BUFSZ];
};

struct cuModuleLoadDataStruct{
    struct callHeader callheader;

    CUmodule module;
    void *image;
};

struct cuModuleLoadDataExStruct{
    struct callHeader callheader;

    CUmodule module;
    void *image;
    unsigned int numOptions;
    CUjit_option options;
    void *optionValues;
};

struct cuModuleLoadFatBinaryStruct{
    struct callHeader callheader;

    CUmodule module;
    void *fatCubin;
};

struct cuModuleUnloadStruct{
    struct callHeader callheader;

    CUmodule hmod;
};

struct cuModuleGetFunctionStruct{
    struct callHeader callheader;

    CUfunction hfunc;
    CUmodule hmod;
    char name[CFWD_BUFSZ];
};

struct cuModuleGetGlobalStruct{
    struct callHeader callheader;

    CUdeviceptr dptr;
    size_t bytes;
    CUmodule hmod;
    char name[CFWD_BUFSZ];
};

struct cuModuleGetTexRefStruct{
    struct callHeader callheader;

    CUtexref pTexRef;
    CUmodule hmod;
    char name[CFWD_BUFSZ];
};

struct cuModuleGetSurfRefStruct{
    struct callHeader callheader;

    CUsurfref pSurfRef;
    CUmodule hmod;
    char name[CFWD_BUFSZ];
};

struct cuMemGetInfoStruct{
    struct callHeader callheader;

    size_t free_;
    size_t total;
};

struct cuMemAllocStruct{
    struct callHeader callheader;

    CUdeviceptr dptr;
    size_t bytesize;
};

struct cuMemAllocPitchStruct{
    struct callHeader callheader;

    CUdeviceptr dptr;
    size_t pPitch;
    size_t WidthInBytes;
    size_t Height;
    unsigned int ElementSizeBytes;
};

struct cuMemFreeStruct{
    struct callHeader callheader;

    CUdeviceptr dptr;
};

struct cuMemGetAddressRangeStruct{
    struct callHeader callheader;

    CUdeviceptr pbase;
    size_t psize;
    CUdeviceptr dptr;
};

struct cuMemAllocHostStruct{
    struct callHeader callheader;

    void *pp;
    size_t bytesize;
};

struct cuMemFreeHostStruct{
    struct callHeader callheader;

    void *p;
};

struct cuMemHostAllocStruct{
    struct callHeader callheader;

    void *pp;
    size_t bytesize;
    unsigned int Flags;
};

struct cuMemHostGetDevicePointerStruct{
    struct callHeader callheader;

    CUdeviceptr pdptr;
    void *p;
    unsigned int Flags;
};

struct cuMemHostGetFlagsStruct{
    struct callHeader callheader;

    unsigned int pFlags;
    void *p;
};

struct cuMemHostRegisterStruct{
    struct callHeader callheader;

    void *p;
    size_t bytesize;
    unsigned int Flags;
};

struct cuMemHostUnregisterStruct{
    struct callHeader callheader;

    void *p;
};

struct cuMemcpyStruct{
    struct callHeader callheader;

    CUdeviceptr dst;
    CUdeviceptr src;
    size_t ByteCount;
};

struct cuMemcpyPeerStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    CUcontext dstContext;
    CUdeviceptr srcDevice;
    CUcontext srcContext;
    size_t ByteCount;
};

struct cuMemcpyHtoDStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    void *srcHost;
    size_t ByteCount;
};

struct cuMemcpyDtoHStruct{
    struct callHeader callheader;

    void *dstHost;
    CUdeviceptr srcDevice;
    size_t ByteCount;
};

struct cuMemcpyDtoDStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    CUdeviceptr srcDevice;
    size_t ByteCount;
};

struct cuMemcpyDtoAStruct{
    struct callHeader callheader;

    CUarray dstArray;
    size_t dstOffset;
    CUdeviceptr srcDevice;
    size_t ByteCount;
};

struct cuMemcpyAtoDStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    CUarray srcArray;
    size_t srcOffset;
    size_t ByteCount;
};

struct cuMemcpyHtoAStruct{
    struct callHeader callheader;

    CUarray dstArray;
    size_t dstOffset;
    void *srcHost;
    size_t ByteCount;
};

struct cuMemcpyAtoHStruct{
    struct callHeader callheader;

    void *dstHost;
    CUarray srcArray;
    size_t srcOffset;
    size_t ByteCount;
};

struct cuMemcpyAtoAStruct{
    struct callHeader callheader;

    CUarray dstArray;
    size_t dstOffset;
    CUarray srcArray;
    size_t srcOffset;
    size_t ByteCount;
};

struct cuMemcpy2DStruct{
    struct callHeader callheader;

    CUDA_MEMCPY2D pCopy;
};

struct cuMemcpy2DUnalignedStruct{
    struct callHeader callheader;

    CUDA_MEMCPY2D pCopy;
};

struct cuMemcpy3DStruct{
    struct callHeader callheader;

    CUDA_MEMCPY3D pCopy;
};

struct cuMemcpy3DPeerStruct{
    struct callHeader callheader;

    CUDA_MEMCPY3D_PEER pCopy;
};

struct cuMemcpyAsyncStruct{
    struct callHeader callheader;

    CUdeviceptr dst;
    CUdeviceptr src;
    size_t ByteCount;
    CUstream hStream;
};

struct cuMemcpyPeerAsyncStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    CUcontext dstContext;
    CUdeviceptr srcDevice;
    CUcontext srcContext;
    size_t ByteCount;
    CUstream hStream;
};

struct cuMemcpyHtoDAsyncStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    void *srcHost;
    size_t ByteCount;
    CUstream hStream;
};

struct cuMemcpyDtoHAsyncStruct{
    struct callHeader callheader;

    void *dstHost;
    CUdeviceptr srcDevice;
    size_t ByteCount;
    CUstream hStream;
};

struct cuMemcpyDtoDAsyncStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    CUdeviceptr srcDevice;
    size_t ByteCount;
    CUstream hStream;
};

struct cuMemcpyHtoAAsyncStruct{
    struct callHeader callheader;

    CUarray dstArray;
    size_t dstOffset;
    void *srcHost;
    size_t ByteCount;
    CUstream hStream;
};

struct cuMemcpyAtoHAsyncStruct{
    struct callHeader callheader;

    void *dstHost;
    CUarray srcArray;
    size_t srcOffset;
    size_t ByteCount;
    CUstream hStream;
};

struct cuMemcpy2DAsyncStruct{
    struct callHeader callheader;

    CUDA_MEMCPY2D pCopy;
    CUstream hStream;
};

struct cuMemcpy3DAsyncStruct{
    struct callHeader callheader;

    CUDA_MEMCPY3D pCopy;
    CUstream hStream;
};

struct cuMemcpy3DPeerAsyncStruct{
    struct callHeader callheader;

    CUDA_MEMCPY3D_PEER pCopy;
    CUstream hStream;
};

struct cuMemsetD8Struct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    unsigned char uc;
    size_t N;
};

struct cuMemsetD16Struct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    unsigned short us;
    size_t N;
};

struct cuMemsetD32Struct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    unsigned int ui;
    size_t N;
};

struct cuMemsetD2D8Struct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    size_t dstPitch;
    unsigned char uc;
    size_t Width;
    size_t Height;
};

struct cuMemsetD2D16Struct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    size_t dstPitch;
    unsigned short us;
    size_t Width;
    size_t Height;
};

struct cuMemsetD2D32Struct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    size_t dstPitch;
    unsigned int ui;
    size_t Width;
    size_t Height;
};

struct cuMemsetD8AsyncStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    unsigned char uc;
    size_t N;
    CUstream hStream;
};

struct cuMemsetD16AsyncStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    unsigned short us;
    size_t N;
    CUstream hStream;
};

struct cuMemsetD32AsyncStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    unsigned int ui;
    size_t N;
    CUstream hStream;
};

struct cuMemsetD2D8AsyncStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    size_t dstPitch;
    unsigned char uc;
    size_t Width;
    size_t Height;
    CUstream hStream;
};

struct cuMemsetD2D16AsyncStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    size_t dstPitch;
    unsigned short us;
    size_t Width;
    size_t Height;
    CUstream hStream;
};

struct cuMemsetD2D32AsyncStruct{
    struct callHeader callheader;

    CUdeviceptr dstDevice;
    size_t dstPitch;
    unsigned int ui;
    size_t Width;
    size_t Height;
    CUstream hStream;
};

struct cuArrayCreateStruct{
    struct callHeader callheader;

    CUarray pHandle;
    CUDA_ARRAY_DESCRIPTOR pAllocateArray;
};

struct cuArrayGetDescriptorStruct{
    struct callHeader callheader;

    CUDA_ARRAY_DESCRIPTOR pArrayDescriptor;
    CUarray hArray;
};

struct cuArrayDestroyStruct{
    struct callHeader callheader;

    CUarray hArray;
};

struct cuArray3DCreateStruct{
    struct callHeader callheader;

    CUarray pHandle;
    CUDA_ARRAY3D_DESCRIPTOR pAllocateArray;
};

struct cuArray3DGetDescriptorStruct{
    struct callHeader callheader;

    CUDA_ARRAY3D_DESCRIPTOR pArrayDescriptor;
    CUarray hArray;
};

struct cuPointerGetAttributeStruct{
    struct callHeader callheader;

    void *data;
    CUpointer_attribute attribute;
    CUdeviceptr ptr;
};

struct cuStreamCreateStruct{
    struct callHeader callheader;

    CUstream phStream;
    unsigned int Flags;
};

struct cuStreamWaitEventStruct{
    struct callHeader callheader;

    CUstream hStream;
    CUevent hEvent;
    unsigned int Flags;
};

struct cuStreamQueryStruct{
    struct callHeader callheader;

    CUstream hStream;
};

struct cuStreamSynchronizeStruct{
    struct callHeader callheader;

    CUstream hStream;
};

struct cuStreamDestroyStruct{
    struct callHeader callheader;

    CUstream hStream;
};

struct cuEventCreateStruct{
    struct callHeader callheader;

    CUevent phEvent;
    unsigned int Flags;
};

struct cuEventRecordStruct{
    struct callHeader callheader;

    CUevent hEvent;
    CUstream hStream;
};

struct cuEventQueryStruct{
    struct callHeader callheader;

    CUevent hEvent;
};

struct cuEventSynchronizeStruct{
    struct callHeader callheader;

    CUevent hEvent;
};

struct cuEventDestroyStruct{
    struct callHeader callheader;

    CUevent hEvent;
};

struct cuEventElapsedTimeStruct{
    struct callHeader callheader;

    float pMilliseconds;
    CUevent hStart;
    CUevent hEnd;
};

struct cuFuncGetAttributeStruct{
    struct callHeader callheader;

    int pi;
    CUfunction_attribute attrib;
    CUfunction hfunc;
};

struct cuFuncSetCacheConfigStruct{
    struct callHeader callheader;

    CUfunction hfunc;
    CUfunc_cache config;
};

struct cuFuncSetBlockShapeStruct{
    struct callHeader callheader;

    CUfunction hfunc;
    int x;
    int y;
    int z;
};

struct cuFuncSetSharedSizeStruct{
    struct callHeader callheader;

    CUfunction hfunc;
    unsigned int bytes;
};

struct cuParamSetSizeStruct{
    struct callHeader callheader;

    CUfunction hfunc;
    unsigned int numbytes;
};

struct cuParamSetiStruct{
    struct callHeader callheader;

    CUfunction hfunc;
    int offset;
    unsigned int value;
};

struct cuParamSetfStruct{
    struct callHeader callheader;

    CUfunction hfunc;
    int offset;
    float value;
};

struct cuParamSetvStruct{
    struct callHeader callheader;

    CUfunction hfunc;
    int offset;
    void *ptr;
    unsigned int numbytes;
};

struct cuLaunchStruct{
    struct callHeader callheader;

    CUfunction f;
};

struct cuLaunchGridStruct{
    struct callHeader callheader;

    CUfunction f;
    int grid_width;
    int grid_height;
};

struct cuLaunchGridAsyncStruct{
    struct callHeader callheader;

    CUfunction f;
    int grid_width;
    int grid_height;
    CUstream hStream;
};

struct cuParamSetTexRefStruct{
    struct callHeader callheader;

    CUfunction hfunc;
    int texunit;
    CUtexref hTexRef;
};

struct cuTexRefSetArrayStruct{
    struct callHeader callheader;

    CUtexref hTexRef;
    CUarray hArray;
    unsigned int Flags;
};

struct cuTexRefSetAddressStruct{
    struct callHeader callheader;

    size_t ByteOffset;
    CUtexref hTexRef;
    CUdeviceptr dptr;
    size_t bytes;
};

struct cuTexRefSetAddress2DStruct{
    struct callHeader callheader;

    CUtexref hTexRef;
    CUDA_ARRAY_DESCRIPTOR desc;
    CUdeviceptr dptr;
    size_t Pitch;
};

struct cuTexRefSetFormatStruct{
    struct callHeader callheader;

    CUtexref hTexRef;
    CUarray_format fmt;
    int NumPackedComponents;
};

struct cuTexRefSetAddressModeStruct{
    struct callHeader callheader;

    CUtexref hTexRef;
    int dim;
    CUaddress_mode am;
};

struct cuTexRefSetFilterModeStruct{
    struct callHeader callheader;

    CUtexref hTexRef;
    CUfilter_mode fm;
};

struct cuTexRefSetFlagsStruct{
    struct callHeader callheader;

    CUtexref hTexRef;
    unsigned int Flags;
};

struct cuTexRefGetAddressStruct{
    struct callHeader callheader;

    CUdeviceptr pdptr;
    CUtexref hTexRef;
};

struct cuTexRefGetArrayStruct{
    struct callHeader callheader;

    CUarray phArray;
    CUtexref hTexRef;
};

struct cuTexRefGetAddressModeStruct{
    struct callHeader callheader;

    CUaddress_mode pam;
    CUtexref hTexRef;
    int dim;
};

struct cuTexRefGetFilterModeStruct{
    struct callHeader callheader;

    CUfilter_mode pfm;
    CUtexref hTexRef;
};

struct cuTexRefGetFormatStruct{
    struct callHeader callheader;

    CUarray_format pFormat;
    int pNumChannels;
    CUtexref hTexRef;
};

struct cuTexRefGetFlagsStruct{
    struct callHeader callheader;

    unsigned int pFlags;
    CUtexref hTexRef;
};

struct cuTexRefCreateStruct{
    struct callHeader callheader;

    CUtexref pTexRef;
};

struct cuTexRefDestroyStruct{
    struct callHeader callheader;

    CUtexref hTexRef;
};

struct cuSurfRefSetArrayStruct{
    struct callHeader callheader;

    CUsurfref hSurfRef;
    CUarray hArray;
    unsigned int Flags;
};

struct cuSurfRefGetArrayStruct{
    struct callHeader callheader;

    CUarray phArray;
    CUsurfref hSurfRef;
};

struct cuDeviceCanAccessPeerStruct{
    struct callHeader callheader;

    int canAccessPeer;
    CUdevice dev;
    CUdevice peerDev;
};

struct cuCtxEnablePeerAccessStruct{
    struct callHeader callheader;

    CUcontext peerContext;
    unsigned int Flags;
};

struct cuCtxDisablePeerAccessStruct{
    struct callHeader callheader;

    CUcontext peerContext;
};

struct cuGraphicsUnregisterResourceStruct{
    struct callHeader callheader;

    CUgraphicsResource resource;
};

struct cuGraphicsSubResourceGetMappedArrayStruct{
    struct callHeader callheader;

    CUarray pArray;
    CUgraphicsResource resource;
    unsigned int arrayIndex;
    unsigned int mipLevel;
};

struct cuGraphicsResourceGetMappedPointerStruct{
    struct callHeader callheader;

    CUdeviceptr pDevPtr;
    size_t pSize;
    CUgraphicsResource resource;
};

struct cuGraphicsResourceSetMapFlagsStruct{
    struct callHeader callheader;

    CUgraphicsResource resource;
    unsigned int flags;
};

struct cuGraphicsMapResourcesStruct{
    struct callHeader callheader;

    unsigned int count;
    CUgraphicsResource resources;
    CUstream hStream;
};

struct cuGraphicsUnmapResourcesStruct{
    struct callHeader callheader;

    unsigned int count;
    CUgraphicsResource resources;
    CUstream hStream;
};

struct cuGetExportTableStruct{
    struct callHeader callheader;

    void *ppExportTable;
    CUuuid pExportTableId;
};

/* Data structures from header faCuda_api.cpp (included from )*/
struct cudaDeviceResetStruct{
    struct callHeader callheader;

};

struct cudaDeviceSynchronizeStruct{
    struct callHeader callheader;

};

struct cudaDeviceSetLimitStruct{
    struct callHeader callheader;

    enum cudaLimit limit;
    size_t value;
};

struct cudaDeviceGetLimitStruct{
    struct callHeader callheader;

    size_t pValue;
    enum cudaLimit limit;
};

struct cudaDeviceGetCacheConfigStruct{
    struct callHeader callheader;

    enum cudaFuncCache pCacheConfig;
};

struct cudaDeviceSetCacheConfigStruct{
    struct callHeader callheader;

    enum cudaFuncCache cacheConfig;
};

struct cudaThreadExitStruct{
    struct callHeader callheader;

};

struct cudaThreadSynchronizeStruct{
    struct callHeader callheader;

};

struct cudaThreadSetLimitStruct{
    struct callHeader callheader;

    enum cudaLimit limit;
    size_t value;
};

struct cudaThreadGetLimitStruct{
    struct callHeader callheader;

    size_t pValue;
    enum cudaLimit limit;
};

struct cudaThreadGetCacheConfigStruct{
    struct callHeader callheader;

    enum cudaFuncCache pCacheConfig;
};

struct cudaThreadSetCacheConfigStruct{
    struct callHeader callheader;

    enum cudaFuncCache cacheConfig;
};

struct cudaGetLastErrorStruct{
    struct callHeader callheader;

};

struct cudaPeekAtLastErrorStruct{
    struct callHeader callheader;

};

struct cudaGetDeviceCountStruct{
    struct callHeader callheader;

    int count;
};

struct cudaGetDevicePropertiesStruct{
    struct callHeader callheader;

    struct cudaDeviceProp prop;
    int device;
};

struct cudaChooseDeviceStruct{
    struct callHeader callheader;

    int device;
    struct cudaDeviceProp prop;
};

struct cudaSetDeviceStruct{
    struct callHeader callheader;

    int device;
};

struct cudaGetDeviceStruct{
    struct callHeader callheader;

    int device;
};

struct cudaSetValidDevicesStruct{
    struct callHeader callheader;

    int device_arr;
    int len;
};

struct cudaSetDeviceFlagsStruct{
    struct callHeader callheader;

    unsigned int flags;
};

struct cudaStreamCreateStruct{
    struct callHeader callheader;

    cudaStream_t pStream;
};

struct cudaStreamDestroyStruct{
    struct callHeader callheader;

    cudaStream_t stream;
};

struct cudaStreamWaitEventStruct{
    struct callHeader callheader;

    cudaStream_t stream;
    cudaEvent_t event;
    unsigned int flags;
};

struct cudaStreamSynchronizeStruct{
    struct callHeader callheader;

    cudaStream_t stream;
};

struct cudaStreamQueryStruct{
    struct callHeader callheader;

    cudaStream_t stream;
};

struct cudaEventCreateStruct{
    struct callHeader callheader;

    cudaEvent_t event;
};

struct cudaEventCreateWithFlagsStruct{
    struct callHeader callheader;

    cudaEvent_t event;
    unsigned int flags;
};

struct cudaEventRecordStruct{
    struct callHeader callheader;

    cudaEvent_t event;
    cudaStream_t stream;
};

struct cudaEventQueryStruct{
    struct callHeader callheader;

    cudaEvent_t event;
};

struct cudaEventSynchronizeStruct{
    struct callHeader callheader;

    cudaEvent_t event;
};

struct cudaEventDestroyStruct{
    struct callHeader callheader;

    cudaEvent_t event;
};

struct cudaEventElapsedTimeStruct{
    struct callHeader callheader;

    float ms;
    cudaEvent_t start;
    cudaEvent_t end;
};

struct cudaSetupArgumentStruct{
    struct callHeader callheader;

    size_t size;
    size_t offset;

    pid_t guest_pid;
};

struct cudaFuncSetCacheConfigStruct{
    struct callHeader callheader;

    char func[CFWD_BUFSZ];
    enum cudaFuncCache cacheConfig;
};

struct cudaConfigureCallStruct{
    struct callHeader callheader;

    dim3 gridDim;
    dim3 blockDim;
    size_t sharedMem;
    cudaStream_t stream;

    pid_t guest_pid;
};

struct cudaLaunchStruct{
    struct callHeader callheader;

    char entryString[CFWD_BUFSZ];
    char *entry;

    pid_t guest_pid;
};

struct cudaFuncGetAttributesStruct{
    struct callHeader callheader;

    struct cudaFuncAttributes attr;
    char func[CFWD_BUFSZ];
};

struct cudaSetDoubleForDeviceStruct{
    struct callHeader callheader;

    double d;
};

struct cudaSetDoubleForHostStruct{
    struct callHeader callheader;

    double d;
};

struct cudaMallocStruct{
    struct callHeader callheader;

    void *devPtr;
    size_t size;
};

struct cudaMallocHostStruct{
    struct callHeader callheader;

    void *ptr;
    size_t size;
};

struct cudaMallocPitchStruct{
    struct callHeader callheader;

    void *devPtr;
    size_t pitch;
    size_t width;
    size_t height;
};

struct cudaFreeStruct{
    struct callHeader callheader;

    void *devPtr;
};

struct cudaFreeHostStruct{
    struct callHeader callheader;

    void *ptr;
};

struct cudaFreeArrayStruct{
    struct callHeader callheader;

    struct cudaArray *array;
};

struct cudaHostAllocStruct{
    struct callHeader callheader;

    void *pHost;
    size_t size;
    unsigned int flags;
};

struct cudaHostRegisterStruct{
    struct callHeader callheader;

    void *ptr;
    size_t size;
    unsigned int flags;
};

struct cudaHostUnregisterStruct{
    struct callHeader callheader;

    void *ptr;
};

struct cudaHostGetDevicePointerStruct{
    struct callHeader callheader;

    void *pDevice;
    void *pHost;
    unsigned int flags;
};

struct cudaHostGetFlagsStruct{
    struct callHeader callheader;

    unsigned int pFlags;
    void *pHost;
};

struct cudaMalloc3DStruct{
    struct callHeader callheader;

    struct cudaPitchedPtr pitchedDevPtr;
    struct cudaExtent extent;
};

struct cudaMemcpy3DStruct{
    struct callHeader callheader;

    struct cudaMemcpy3DParms p;
};

struct cudaMemcpy3DPeerStruct{
    struct callHeader callheader;

    struct cudaMemcpy3DPeerParms p;
};

struct cudaMemGetInfoStruct{
    struct callHeader callheader;

    size_t free_;
    size_t total;
};

struct cudaMemcpyStruct{
    struct callHeader callheader;

    void *dst;
    void *src;
    size_t count;
    size_t offset;
    enum cudaMemcpyKind kind;
};

struct cudaMemcpyPeerStruct{
    struct callHeader callheader;

    void *dst;
    int dstDevice;
    void *src;
    int srcDevice;
    size_t count;
};

struct cudaMemcpyToArrayStruct{
    struct callHeader callheader;

    struct cudaArray *dst;
    size_t wOffset;
    size_t hOffset;
    void *src;
    size_t count;
    enum cudaMemcpyKind kind;
};

struct cudaMemcpyFromArrayStruct{
    struct callHeader callheader;

    void *dst;
    struct cudaArray *src;
    size_t wOffset;
    size_t hOffset;
    size_t count;
    enum cudaMemcpyKind kind;
};

struct cudaMemcpy2DStruct{
    struct callHeader callheader;

    void *dst;
    size_t dpitch;
    void *src;
    size_t spitch;
    size_t width;
    size_t height;
    enum cudaMemcpyKind kind;
};

struct cudaMemcpy2DToArrayStruct{
    struct callHeader callheader;

    struct cudaArray *dst;
    size_t wOffset;
    size_t hOffset;
    void *src;
    size_t spitch;
    size_t width;
    size_t height;
    enum cudaMemcpyKind kind;
};

struct cudaMemcpy2DFromArrayStruct{
    struct callHeader callheader;

    void *dst;
    size_t dpitch;
    struct cudaArray *src;
    size_t wOffset;
    size_t hOffset;
    size_t width;
    size_t height;
    enum cudaMemcpyKind kind;
};

struct cudaMemsetStruct{
    struct callHeader callheader;

    void *devPtr;
    int value;
    size_t count;
};

struct cudaMemset2DStruct{
    struct callHeader callheader;

    void *devPtr;
    size_t pitch;
    int value;
    size_t width;
    size_t height;
};

struct cudaMemset3DStruct{
    struct callHeader callheader;

    struct cudaPitchedPtr pitchedDevPtr;
    int value;
    struct cudaExtent extent;
};

struct cudaGetSymbolAddressStruct{
    struct callHeader callheader;

    void *devPtr;
    char symbol[CFWD_BUFSZ];
};

struct cudaGetSymbolSizeStruct{
    struct callHeader callheader;

    size_t size;
    char symbol[CFWD_BUFSZ];
};

struct cudaPointerGetAttributesStruct{
    struct callHeader callheader;

    struct cudaPointerAttributes attributes;
    void *ptr;
};

struct cudaDeviceCanAccessPeerStruct{
    struct callHeader callheader;

    int canAccessPeer;
    int device;
    int peerDevice;
};

struct cudaDeviceEnablePeerAccessStruct{
    struct callHeader callheader;

    int peerDevice;
    unsigned int flags;
};

struct cudaDeviceDisablePeerAccessStruct{
    struct callHeader callheader;

    int peerDevice;
};

struct cudaGraphicsUnregisterResourceStruct{
    struct callHeader callheader;

    cudaGraphicsResource_t resource;
};

struct cudaGraphicsResourceSetMapFlagsStruct{
    struct callHeader callheader;

    cudaGraphicsResource_t resource;
    unsigned int flags;
};

struct cudaGraphicsResourceGetMappedPointerStruct{
    struct callHeader callheader;

    void *devPtr;
    size_t size;
    cudaGraphicsResource_t resource;
};

struct cudaGraphicsSubResourceGetMappedArrayStruct{
    struct callHeader callheader;

    struct cudaArray *array;
    cudaGraphicsResource_t resource;
    unsigned int arrayIndex;
    unsigned int mipLevel;
};

struct cudaGetChannelDescStruct{
    struct callHeader callheader;

    struct cudaChannelFormatDesc desc;
    struct cudaArray *array;
};

struct cudaBindTexture2DStruct{
    struct callHeader callheader;

    size_t offset;
    struct textureReference texref;
    void *devPtr;
    struct cudaChannelFormatDesc desc;
    size_t width;
    size_t height;
    size_t pitch;
};

struct cudaBindTextureToArrayStruct{
    struct callHeader callheader;

    struct textureReference texref;
    struct cudaArray *array;
    struct cudaChannelFormatDesc desc;
};

struct cudaUnbindTextureStruct{
    struct callHeader callheader;

    struct textureReference texref;
};

struct cudaGetTextureAlignmentOffsetStruct{
    struct callHeader callheader;

    size_t offset;
    struct textureReference texref;
};

struct cudaGetTextureReferenceStruct{
    struct callHeader callheader;

    struct textureReference texref;
    char symbol[CFWD_BUFSZ];
};

struct cudaBindSurfaceToArrayStruct{
    struct callHeader callheader;

    struct surfaceReference surfref;
    struct cudaArray *array;
    struct cudaChannelFormatDesc desc;
};

struct cudaGetSurfaceReferenceStruct{
    struct callHeader callheader;

    struct surfaceReference surfref;
    char symbol[CFWD_BUFSZ];
};

struct cudaDriverGetVersionStruct{
    struct callHeader callheader;

    int driverVersion;
};

struct cudaRuntimeGetVersionStruct{
    struct callHeader callheader;

    int runtimeVersion;
};

struct cudaGetExportTableStruct{
    struct callHeader callheader;

    void *ppExportTable;
    cudaUUID_t pExportTableId;
};

